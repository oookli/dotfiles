
# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

plugins=(git ruby rails gem history history-substring-search brew osx vi-mode zsh-syntax-highlighting zsh-autosuggestions)

export ZSH_THEME="bureau"

# use vim as the visual editor
export VISUAL='nvim'
export EDITOR=$VISUAL

source $ZSH/oh-my-zsh.sh

export BUNDLER_EDITOR='vim'

export HOMEBREW_CASK_OPTS="--appdir=/Applications"

export TERMINFO="$HOME/.terminfo"

# alias vim='mvim -v'
# alias vi='mvim -v'

# function iphonesim { open /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Applications/iPhone\ Simulator.app  }

# alias ez='vim ~/.zshrc'
# alias sz='source ~/.zshrc'
# alias edot='vim ~/code/dotfiles/'

# zstyle ':completion:*' list-colors 'di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'

# alias wgulp="gulp watch"
# alias bgulp="gulp build"

# I do a lot of web development, so I need to edit these non-owned files fairly often
alias edit_hosts='vim /etc/hosts'
alias edit_httpd='vim /etc/apache2/httpd.conf'
alias edit_php='vim /etc/php.ini'
alias edit_vhosts='vim /etc/apache2/extra/httpd-vhosts.conf'

alias goto_web='cd ~/Sites'
alias goto_web_home='cd ~/Sites/home'
# alias emacs='/Applications/Emacs.app/Contents/MacOS/Emacs'

# Prevent correct of git slog
alias be='bundle exec'

bindkey -M viins '^r' history-incremental-search-backward
bindkey -M vicmd '^r' history-incremental-search-backward
bindkey -v
export KEYTIMEOUT=1

# Do not autoupdate tmux window titles
log() {
  echo "$*" >> ~/foo.log
}

export DISABLE_AUTO_TITLE="true"

alias tls="tmux list-sessions"

tm-select-session() {
  project=$(projects | fzf --reverse)
  if [ ! -z "$project" ]; then
    (cd "$project" && tat)
  fi
}

spin-up-tagwatchers() {
  for project in $(projects 2); do
    (
      cd "$project" &> /dev/null
      if ! pgrep -q "tagwatch -d $(pwd)"; then
        tagwatch -d "$(pwd)" &
      fi
    )
  done
}

twlist() {
  pgrep -lf tagwatch | cut -d ' ' -f 5 | sed -E "s#$HOME#\~#" | uniq
}

twb() {
  nohup tagwatch -v -d "$(pwd)" &> ~/.tagwatch.log &
}

_not_inside_tmux() {
  [[ -z "$TMUX" ]]
}

ensure_tmux_is_running() {
  if _not_inside_tmux; then
    tat
  fi
}

ensure_tmux_is_running

function kubectl-amp() {
  local environment=$1
  shift;
  kubectl exec -n $environment -it $(kubectl get pods -n $environment -l product=amp,app=amp-rails-webserver -o=custom-columns=NAME:.metadata.name | tail -1) -- $@
}

bindkey '^ ' autosuggest-accept

# MYSQL=/usr/local/mysql/bin
# export DYLD_LIBRARY_PATH=/usr/local/mysql/lib:$DYLD_LIBRARY_PATH

export PATH=$PATH:/usr/local/bin:/usr/local/sbin:$MYSQL:/usr/local/heroku/bin:/bin:/sbin:/opt/local/bin:/opt/local/sbin:/usr/bin:/usr/sbin:$HOME/usr:/Library/Frameworks/JRuby.framework/Versions/Current/bin:/usr/local/opt/postgresql@9.6/bin:/usr/local:/usr/local/opt/coreutils/libexec/gnubin:/usr/local/opt/node@8/bin:/usr/local/opt/ruby/bin:/usr/local/opt/openssl/bin

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

export PATH="$PATH:`yarn global bin`"
export LANG=en_US.UTF-8

# added by travis gem
[ -f /Users/oookli/.travis/travis.sh ] && source /Users/oookli/.travis/travis.sh

export LDFLAGS="-L/usr/local/opt/node@8/lib"
export CPPFLAGS="-I/usr/local/opt/node@8/include"

export LDFLAGS="-L/usr/local/opt/ruby/lib"
export CPPFLAGS="-I/usr/local/opt/ruby/include"

export LDFLAGS="-L/usr/local/opt/openssl/lib"
export CPPFLAGS="-I/usr/local/opt/openssl/include"

eval "$(rbenv init - zsh)"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
